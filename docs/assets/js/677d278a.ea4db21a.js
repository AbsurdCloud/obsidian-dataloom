"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[319],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>f});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),u=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=u(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},c=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=u(t),c=a,f=p["".concat(s,".").concat(c)]||p[c]||m[c]||i;return t?r.createElement(f,o(o({ref:n},d),{},{components:t})):r.createElement(f,o({ref:n},d))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=c;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=t[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}c.displayName="MDXCreateElement"},3842:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var r=t(7462),a=(t(7294),t(3905));const i={},o="Loom file",l={unversionedId:"other/loom-file",id:"other/loom-file",title:"Loom file",description:"DataLoom saves application data in JSON format. It is stored in a file with a .loom extension.",source:"@site/docs/other/loom-file.mdx",sourceDirName:"other",slug:"/other/loom-file",permalink:"/other/loom-file",draft:!1,editUrl:"https://github.com/trey-wallis/obsidian-dataloom/tree/master/docusaurus/docs/other/loom-file.mdx",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Global settings",permalink:"/other/global-settings"},next:{title:"Virtualization",permalink:"/other/virtualization"}},s={},u=[{value:"Fixing a broken file",id:"fixing-a-broken-file",level:2},{value:"Format guide",id:"format-guide",level:2},{value:"Current format",id:"current-format",level:2},{value:"Example file",id:"example-file",level:2},{value:"Typescript declarations",id:"typescript-declarations",level:2}],d={toc:u},p="wrapper";function m(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"loom-file"},"Loom file"),(0,a.kt)("p",null,"DataLoom saves application data in JSON format. It is stored in a file with a ",(0,a.kt)("inlineCode",{parentName:"p"},".loom")," extension."),(0,a.kt)("p",null,"When updating DataLoom, your loom file will be migrated to the latest plugin version. It is possible that this might fail."),(0,a.kt)("p",null,"To fix a broken loom file, please follow the instructions below."),(0,a.kt)("h2",{id:"fixing-a-broken-file"},"Fixing a broken file"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Open the file in a text editor"),(0,a.kt)("li",{parentName:"ol"},"Review each line of the file, making sure that it matches the ",(0,a.kt)("a",{parentName:"li",href:"#current-format"},"current")," JSON format"),(0,a.kt)("li",{parentName:"ol"},"For each line that doesn't match, make the necessary corrections. The problem is often that a key is missing or misspelled")),(0,a.kt)("p",null,"Note: If you are not sure what to do, please open an ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/trey-wallis/obsidian-dataloom/issues/new?assignees=&labels=bug&projects=&template=BUG.yml"},"issue")," in GitHub repository or post in the ",(0,a.kt)("strong",{parentName:"p"},"bugs")," channel of the ",(0,a.kt)("a",{parentName:"p",href:"https://discord.gg/QaFbepMdN4"},"Discord")," community. Paste the error details. You can get this by clicking the ",(0,a.kt)("strong",{parentName:"p"},"Copy error details")," button."),(0,a.kt)("h2",{id:"format-guide"},"Format guide"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"string")," - a string of characters - ",(0,a.kt)("inlineCode",{parentName:"li"},'"hello world"'),". Always include double quotations."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"number")," - a number - ",(0,a.kt)("inlineCode",{parentName:"li"},"123")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"boolean")," - ",(0,a.kt)("inlineCode",{parentName:"li"},"true")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"false")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"null")," - a null value - ",(0,a.kt)("inlineCode",{parentName:"li"},"null")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"[]")," - a list of values - ",(0,a.kt)("inlineCode",{parentName:"li"},"[1, 2, 3]"))),(0,a.kt)("p",null,"A word with a capital letter such as ",(0,a.kt)("inlineCode",{parentName:"p"},"CellType")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"Column")," represents a reference to a JSON object or enum."),(0,a.kt)("h2",{id:"current-format"},"Current format"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "model": {\n    "columns": [\n      {\n        "id": string,\n        "sortDir": SortDir,\n        "isVisible": boolean,\n        "width": string,\n        "type": CellType,\n        "numberPrefix": string,\n        "numberSuffix": string,\n        "numberSeparator": string,\n        "content": string",\n        "numberFormat": NumberFormat,\n        "currencyType": CurrencyType,\n        "dateFormat": DateFormat,\n        "shouldWrapOverflow": boolean,\n        "tags": Tag[],\n        "calculationType": CalculationType,\n        "aspectRatio": AspectRatio,\n        "horizontalPadding": PaddingSize,\n        "verticalPadding": PaddingSize\n      },\n      {\n        "id": string,\n        "sortDir": SortDir,\n        "isVisible": boolean,\n        "width": string,\n        "type": CellType,\n        "numberPrefix": string,\n        "numberSuffix": string,\n        "numberSeparator": string,\n        "content": string,\n        "numberFormat": NumberFormat,\n        "currencyType": CurrencyType,\n        "dateFormat": DateFormat,\n        "shouldWrapOverflow": boolean,\n        "tags": [\n          {\n            "id": string,\n            "content": string,\n            "color": Color\n          }\n        ],\n        "calculationType": CalculationType,\n        "aspectRatio": AspectRatio,\n        "horizontalPadding": PaddingSize,\n        "verticalPadding": PaddingSize\n      }\n    ],\n    "rows": [\n      {\n        "id": string,\n        "index": number,\n        "creationTime": number,\n        "lastEditedTime": number,\n        "cells": [\n          {\n            "id": string,\n            "isExternalLink": boolean,\n            "columnId": string,\n            "dateTime": number | null,\n            "content": string,\n            "tagIds": string[]\n          },\n          {\n            "id": string,\n            "isExternalLink": boolean,\n            "columnId": string,\n            "dateTime": number | null,\n            "content": string,\n            "tagIds": string[]\n          }\n        ]\n      }\n    ],\n    "filters": [\n      {\n        "id": string,\n        "columnId": string,\n        "operator": FilterOperator,\n        "isEnabled": boolean,\n        "type": CellType,\n        "condition": TextFilterCondition,\n        "text": string\n      }\n    ],\n    "settings": {\n      "numFrozenColumns": number,\n      "showCalculationRow": boolean\n    }\n  },\n  "pluginVersion": string\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"interface Tag {\n    id: string;\n    content: string;\n    color: Color;\n}\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'enum CellType {\n    TEXT = "text",\n    EMBED = "embed",\n    FILE = "file",\n    NUMBER = "number",\n    TAG = "tag",\n    MULTI_TAG = "multi-tag",\n    DATE = "date",\n    CHECKBOX = "checkbox",\n    CREATION_TIME = "creation-time",\n    LAST_EDITED_TIME = "last-edited-time",\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'enum NumberFormat {\n    NUMBER = "number",\n    CURRENCY = "currency",\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'enum Color {\n    LIGHT_GRAY = "light gray",\n    GRAY = "gray",\n    BROWN = "brown",\n    ORANGE = "orange",\n    YELLOW = "yellow",\n    GREEN = "green",\n    BLUE = "blue",\n    PURPLE = "purple",\n    PINK = "pink",\n    RED = "red",\n}\n')),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'enum CurrencyType {\n    ARGENTINA = "ARS",\n    AUSTRALIA = "AUD",\n    CANADA = "CAD",\n    COLOMBIA = "COP",\n    DENMARK = "DKK",\n    UAE = "AED",\n    EUROPE = "EUR",\n    ICELAND = "ISK",\n    ISRAEL = "ILS",\n    MEXICO = "MXN",\n    NORWAY = "NOK",\n    GREAT_BRITAIN = "GBP",\n    BRAZIL = "BRL",\n    SAUDI_ARABIA = "SAR",\n    RUSSIA = "RUB",\n    INDIA = "INR",\n    SINGAPORE = "SGB",\n    SWEDEN = "SEK",\n    SWITZERLAND = "CHF",\n    UNITED_STATES = "USD",\n    SOUTH_KOREA = "KRW",\n    JAPAN = "JPY",\n    CHINA = "CNY",\n}\n')),(0,a.kt)("h2",{id:"example-file"},"Example file"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "model": {\n    "columns": [\n      {\n        "id": "637bedf7-22df-4d9e-be39-722e28ad9147",\n        "sortDir": "default",\n        "isVisible": true,\n        "width": "140px",\n        "type": "text",\n        "numberPrefix": "",\n        "numberSuffix": "",\n        "numberSeparator": "",\n        "content": "New Column",\n        "numberFormat": "number",\n        "currencyType": "USD",\n        "dateFormat": "mm/dd/yyyy",\n        "shouldWrapOverflow": true,\n        "tags": [],\n        "calculationType": "none",\n        "aspectRatio": "unset",\n        "horizontalPadding": "unset",\n        "verticalPadding": "unset"\n      },\n      {\n        "id": "8456b494-fb1c-42b6-a55d-a0d4db5a6c98",\n        "sortDir": "default",\n        "isVisible": true,\n        "width": "140px",\n        "type": "tag",\n        "numberPrefix": "",\n        "numberSuffix": "",\n        "numberSeparator": "",\n        "content": "New Column",\n        "numberFormat": "number",\n        "currencyType": "USD",\n        "dateFormat": "mm/dd/yyyy",\n        "shouldWrapOverflow": true,\n        "tags": [\n          {\n            "id": "be98ee4e-0f55-4d07-873d-7573b65fb695",\n            "markdown": "tag1",\n            "color": "gray"\n          }\n        ],\n        "calculationType": "none",\n        "aspectRatio": "unset",\n        "horizontalPadding": "unset",\n        "verticalPadding": "unset"\n      }\n    ],\n    "rows": [\n      {\n        "id": "f4c063b9-a456-4d1c-81ef-0e1dd950103e",\n        "index": 0,\n        "creationTime": 1695580079305,\n        "lastEditedTime": 1695580097547,\n        "cells": [\n          {\n            "id": "91d434b5-76f6-44ea-b1f0-a670f1a66549",\n            "isExternalLink": false,\n            "columnId": "637bedf7-22df-4d9e-be39-722e28ad9147",\n            "dateTime": null,\n            "content": "test",\n            "tagIds": []\n          },\n          {\n            "id": "4fd2a1e9-b02e-4034-b162-d47681ba0a44",\n            "isExternalLink": false,\n            "columnId": "8456b494-fb1c-42b6-a55d-a0d4db5a6c98",\n            "dateTime": null,\n            "content": "",\n            "tagIds": [\n              "be98ee4e-0f55-4d07-873d-7573b65fb695"\n            ]\n          }\n        ]\n      }\n    ],\n    "filters": [\n      {\n        "id": "118adfb5-2c6b-46be-b370-782fd06d730e",\n        "columnId": "637bedf7-22df-4d9e-be39-722e28ad9147",\n        "operator": "or",\n        "isEnabled": true,\n        "type": "text",\n        "condition": "is",\n        "text": "test"\n      }\n    ],\n    "settings": {\n      "numFrozenColumns": 1,\n      "showCalculationRow": true\n    }\n  },\n  "pluginVersion": "8.6.0"\n}\n')),(0,a.kt)("h2",{id:"typescript-declarations"},"Typescript declarations"),(0,a.kt)("p",null,"The examples above are not comprehensive."),(0,a.kt)("p",null,"If you would like to full typescript declarations for the file, please visit the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/trey-wallis/obsidian-dataloom/blob/master/src/shared/loom-state/types/loom-state.ts"},"GitHub repo")))}m.isMDXComponent=!0}}]);